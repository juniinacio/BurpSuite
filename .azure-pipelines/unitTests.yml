parameters:
  os: ''
  pwsh: false

steps:
- task: PowerShell@2
  displayName: 'Build Module $(ModuleName)'
  inputs:
    targetType: 'inline'
    script: './build.ps1 -Bootstrap'
    pwsh: ${{ parameters.pwsh }}

- task: PowerShell@2
  displayName: 'Set Pipeline Variables'
  inputs:
    targetType: 'inline'
    script: |
      $outputModVerDir = Split-Path -Path (Resolve-Path -Path ./.out/$(ModuleName)/*/*.psd1)
      Write-Host  "##vso[task.setvariable variable=outputModVerDir]$outputModVerDir"
    pwsh: ${{ parameters.pwsh }}

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage'
  inputs:
    summaryFileLocation: '**/$(ModuleName)-Coverage.xml'
    pathToSources: '$(outputModVerDir)'
    failIfCoverageEmpty: true
  condition: and(succeededOrFailed(), eq(variables['System.PullRequest.IsFork'], false))

- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFormat: 'NUnit'
    testResultsFiles: '**/$(ModuleName)-TestsResults.xml'
    testRunTitle: '${{ parameters.os }} Unit Tests'
  condition: succeededOrFailed()
